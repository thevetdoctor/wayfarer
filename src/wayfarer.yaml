swagger: '2.0'
info:
  version: '1.0'
  title: Wayfare Copy
  description: >-
    # Introduction

    What does your API do?


    # Overview

    Things that the developers should know about


    # Authentication

    What is the preferred way of using the API?


    # Error Codes

    What errors and status codes can a user expect?


    # Rate limit

    Is there a limit to the number of requests an user can send?
  contact: {}
host: bookatrip.herokuapp.com
basePath: /api/v1
securityDefinitions: {}
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /auth/signup:
    post:
      description: ''
      summary: Sign Up
      tags:
      - Auth
      operationId: AuthSignupPost
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: email
        in: formData
        required: true
        type: string
        description: ''
      - name: first_name
        in: formData
        required: true
        type: string
        description: ''
      - name: last_name
        in: formData
        required: true
        type: string
        description: ''
      - name: password
        in: formData
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
  /auth/signin:
    post:
      summary: Sign In
      tags:
      - Auth
      operationId: AuthSigninPost
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: email
        in: formData
        required: true
        type: string
        description: ''
      - name: password
        in: formData
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
  /trips:
    post:
      description: ''
      summary: Create Trip
      tags:
      - Trips
      operationId: TripsPost
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: bus_id
        in: formData
        required: true
        type: integer
        format: int32
        description: ''
      - name: origin
        in: formData
        required: true
        type: string
        description: ''
      - name: destination
        in: formData
        required: true
        type: string
        description: ''
      - name: fare
        in: formData
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
    get:
      description: ''
      summary: Get Trips
      tags:
      - Trips
      operationId: TripsGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /trips/2:
    patch:
      description: ''
      summary: Cancel Trip
      tags:
      - Trips
      operationId: Trips2Patch
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /trips/search:
    get:
      description: ''
      summary: Filter Trip
      tags:
      - Trips
      operationId: TripsSearchGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: origin
        in: query
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
  /bookings:
    post:
      description: ''
      summary: Create Booking
      tags:
      - Bookings
      operationId: BookingsPost
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: trip_id
        in: formData
        required: true
        type: integer
        format: int32
        description: ''
      responses:
        200:
          description: ''
          headers: {}
    get:
      description: ''
      summary: Get Bookings
      tags:
      - Bookings
      operationId: BookingsGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /bookings/4:
    delete:
      description: ''
      summary: Delete Booking
      tags:
      - Bookings
      operationId: Bookings4Delete
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
  /bookings/swap/5:
    get:
      description: ''
      summary: Check Available Seats
      tags:
      - Bookings
      operationId: BookingsSwap5Get
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
  /bookings/2:
    patch:
      description: ''
      summary: Change Seat Number
      tags:
      - Bookings
      operationId: Bookings2Patch
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: trip_id
        in: formData
        required: true
        type: integer
        format: int32
        description: ''
      - name: old_seat_number
        in: formData
        required: true
        type: integer
        format: int32
        description: ''
      - name: new_seat_number
        in: formData
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
  /auth:
    get:
      description: ''
      summary: Get Users
      operationId: AuthGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
  /buses:
    get:
      description: ''
      summary: Get Buses
      operationId: BusesGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      responses:
        200:
          description: ''
          headers: {}
tags:
- name: Auth
  description: ''
- name: Trips
  description: ''
- name: Bookings
  description: ''